/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package views;

import Entidades.*;
import java.time.LocalDate;
import java.time.ZoneId;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import persistencia.*;

/**
 *
 * @author salon
 */
public class ViewReserva extends javax.swing.JInternalFrame {

    private Mesa mesa;
    private Reserva reserva;
    private MesaData mesaData;
    private ReservaData reservaData;

    /**
     * Creates new form ViewReserva
     */
    public ViewReserva() {
        initComponents();
        JTextField dateTextField = (JTextField) jdcFecha.getDateEditor().getUiComponent();
        dateTextField.setEditable(false); // Deshabilitar la edici√≥n manual
        mesa = new Mesa();
        mesaData = new MesaData();
        reserva = new Reserva();
        reservaData = new ReservaData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtfNombreCliente = new javax.swing.JTextField();
        jtfDni = new javax.swing.JTextField();
        jtfIdMesa = new javax.swing.JTextField();
        jbNuevaReserva = new javax.swing.JButton();
        jbGuardarReserva = new javax.swing.JButton();
        jdcFecha = new com.toedter.calendar.JDateChooser();
        jbSalir = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Guardar una Reserva");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Nombre cliente:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("DNI:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("Fecha:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setText("Numero de mesa:");

        jtfNombreCliente.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jtfNombreCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNombreClienteActionPerformed(evt);
            }
        });

        jtfDni.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jtfDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfDniKeyTyped(evt);
            }
        });

        jtfIdMesa.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jbNuevaReserva.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jbNuevaReserva.setText("Nueva");
        jbNuevaReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevaReservaActionPerformed(evt);
            }
        });

        jbGuardarReserva.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jbGuardarReserva.setText("Guardar");
        jbGuardarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarReservaActionPerformed(evt);
            }
        });

        jdcFecha.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jbSalir.setBackground(new java.awt.Color(51, 51, 51));
        jbSalir.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jbSalir.setForeground(new java.awt.Color(255, 255, 255));
        jbSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8-cross-32.png"))); // NOI18N
        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbSalir)
                        .addGap(93, 93, 93)
                        .addComponent(jLabel1))
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbNuevaReserva)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbGuardarReserva))
                            .addComponent(jtfNombreCliente, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfDni, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdcFecha, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtfIdMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jbSalir))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jdcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfIdMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbGuardarReserva)
                    .addComponent(jbNuevaReserva))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfNombreClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNombreClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNombreClienteActionPerformed

    private void jbGuardarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarReservaActionPerformed
        // TODO add your handling code here:
        
        
        
        /*El primer try previene el ingreso de caracteres no numericos en campos de texto dni e id*/
        try {
            int dni = Integer.parseInt(jtfDni.getText());
            
            /*Este if controla el limite numerico permitido para dni (Limitado en la base de datos a 8 caracteres)*/
            if (dni > 999999 && dni < 99999999) {
                int numeroMesa = Integer.parseInt(jtfIdMesa.getText());

                String nombre = jtfNombreCliente.getText();
                
                /*El siguiente if controla que campo de texto nombre NO quede vacio*/
                if (!nombre.isEmpty()) {
                    
                    /*El try controla que LocalDate no sea nula*/
                    try {
                      
                        LocalDate fecha = jdcFecha.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

                        mesa = mesaData.obtenerMesaActivaPorNumero(numeroMesa);
                        
                        /*El if controla que mesa no sea nula*/
                        if (mesa != null) {
                            reserva = new Reserva(mesa, nombre, dni, fecha, true);

                            int confirm = JOptionPane.showConfirmDialog(this, "¬øRealizar reserva en la mesa " + mesa.getNumero() + "?", "Confirmar reserva", JOptionPane.YES_NO_OPTION);
                               
                            /*Confirmacion de reserva*/
                            if (confirm == JOptionPane.YES_OPTION) {
                                 /*CREACION DE RESERVA*/
                                 reservaData.guardarReserva(reserva);
                                JOptionPane.showMessageDialog(this, "¬°Reserva creada!");
                                jbGuardarReserva.setEnabled(false);
                                jtfNombreCliente.setText("");
                                jtfDni.setText("");
                                jtfIdMesa.setText("");
                            }
                        }else{
                            JOptionPane.showMessageDialog(this, "El numero de mesa no existe", "Error", JOptionPane.ERROR_MESSAGE);
                            
                        } 
                        
                    } catch (NullPointerException e) {
                        JOptionPane.showMessageDialog(this, "Debe seleccionar una fecha");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "El nombre no puede estar vacio", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "DNI invalido. ", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "DNI e ID solo reciben valores numericos", "", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_jbGuardarReservaActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbNuevaReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevaReservaActionPerformed
        // TODO add your handling code here:
         jbGuardarReserva.setEnabled(true);
    }//GEN-LAST:event_jbNuevaReservaActionPerformed

    private void jtfDniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDniKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(c>'9'|| c<'0'){
            evt.consume();
        }
        if( jtfDni.getText().length() >= 8 ){
            evt.consume();
        }
    }//GEN-LAST:event_jtfDniKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton jbGuardarReserva;
    private javax.swing.JButton jbNuevaReserva;
    private javax.swing.JButton jbSalir;
    private com.toedter.calendar.JDateChooser jdcFecha;
    private javax.swing.JTextField jtfDni;
    private javax.swing.JTextField jtfIdMesa;
    private javax.swing.JTextField jtfNombreCliente;
    // End of variables declaration//GEN-END:variables
}
